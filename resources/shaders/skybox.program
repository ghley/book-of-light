:PROGRAM:
#version 420 core
:VERTEX:
layout (location = 0) in vec3 pos;

uniform mat4 projection;
uniform mat4 view;

out vec3 localPos;

void main() {
    localPos = pos;
    mat4 rotView = mat4(mat3(view));
    vec3 clipPos = projection * view * vec4(localPos, 1.0);

    gl_Position = clipPos.xyww;
}
::VERTEX::
:FRAGMENT:
out vec4 FragColor;

uniform samplerCube cubeMap;

void main() {
    vec3 color = texture(cubeMap, localPos).rgb;
    color = color /  (color + vec3(1.0));
    color = pow(color, vec3(1.0/2.2));
    FragColor = vec4(color, 1.0);
}
::FRAGMENT::
::PROGRAM::